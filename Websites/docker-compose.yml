version: '3.8'



services:

# So host can resolve services names "ems_server" & "ems_client" 
  nginx:
    depends_on:
      - ems_server
      - ems_client
    restart: on-failure
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "3050:80"
      

    networks:
      - grad-net


# server does envirmonet checking at server.js code
  ems_server:
    build: 
      context: ./ems/Server
      dockerfile: Dockerfile.backend
      args:
        - NODE_ENV=${NODE_ENV:-development} # defined in .env
    container_name: ems_server

    ports:
      - 5500:5500

    networks:
      - grad-net




# client has to be provided with enviroment or by default it will build development env
  ems_client:
    build: 
      context: ./ems/client
      dockerfile: Dockerfile.frontend
      target: ${NODE_ENV:-development} # defined in .env
      args:
        - NODE_ENV=${NODE_ENV}
    container_name: ems_client

    ports:
      - 3000:3000

    networks:
      - grad-net 

  mysql_db:
    build: 
      context: ./db
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    container_name: cenralized_mysql


    networks:
      - grad-net 




networks:
  grad-net :
    driver : bridge




